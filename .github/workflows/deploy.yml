name: Deploy

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

env:
  BUN_VERSION: '1.2.13'

jobs:
  publish:
    name: Publicar no NPM
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ env.BUN_VERSION }}
        
    - name: Instalar dependências
      run: bun install
      
    - name: Build do projeto
      run: bun run build
      
    - name: Verificar qualidade do build
      run: |
        echo "🔍 Verificando qualidade do build..."
        
        if [ ! -f "dist/commit-wizard.js" ]; then
          echo "❌ Arquivo principal não encontrado"
          exit 1
        fi
        
        chmod +x dist/commit-wizard.js
        echo "📦 Tamanho do build:"
        ls -lh dist/
        
        # Testar execução básica
        timeout 10s bun run dist/commit-wizard.js --help || true
        echo "✅ Build verificado com sucesso"
      shell: bash
        
    - name: Verificar mudança de versão
      id: check
      uses: EndBug/version-check@v2
      with:
        diff-search: true
        
    - name: Publicar no NPM
      if: steps.check.outputs.changed == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Criar Release no GitHub
      if: steps.check.outputs.changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.check.outputs.version }}
        release_name: Release v${{ steps.check.outputs.version }}
        draft: false
        prerelease: false
        body: |
          🚀 Nova versão do Commit Wizard: v${{ steps.check.outputs.version }}
          
          ## Instalação
          ```bash
          npm install -g commit-wizard
          ```
          
          ## Como usar
          ```bash
          commit-wizard
          ```
          
          Para mais informações, consulte o [README](https://github.com/gilbert-oliveira/commit-wizard#readme).

    - name: Preparar artefatos
      if: steps.check.outputs.changed == 'true'
      run: |
        echo "📦 Preparando artefatos para distribuição..."
        mkdir -p release
        cp -r dist/ release/
        cp package.json README.md LICENSE release/
        
        cd release && sha256sum * > checksums.txt
        echo "✅ Artefatos preparados"
      shell: bash

    - name: Upload artefatos
      if: steps.check.outputs.changed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: commit-wizard-release-v${{ steps.check.outputs.version }}
        path: release/
        retention-days: 90
