name: Deploy

on:
  push:
    branches: [main]
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

env:
  BUN_VERSION: '1.2.13'

jobs:
  publish:
    name: Publicar no NPM
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: ${{ env.BUN_VERSION }}
        
    - name: Instalar dependências
      run: bun install
      
    - name: Build do projeto
      run: bun run build
      
    - name: Verificar qualidade do build
      run: |
        echo "🔍 Verificando qualidade do build..."
        
        if [ ! -f "dist/commit-wizard.js" ]; then
          echo "❌ Arquivo principal não encontrado"
          exit 1
        fi
        
        chmod +x dist/commit-wizard.js
        echo "📦 Tamanho do build:"
        ls -lh dist/
        
        # Testar execução básica
        timeout 10s bun run dist/commit-wizard.js --help || true
        echo "✅ Build verificado com sucesso"
      shell: bash
        
    - name: Verificar mudança de versão
      id: check
      run: |
        echo "🔍 Verificando mudanças de versão..."
        
        # Obter versão atual do package.json
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "📦 Versão atual: $CURRENT_VERSION"
        
        # Verificar se há commits anteriores
        if git rev-parse HEAD~1 >/dev/null 2>&1; then
          # Verificar se há mudanças no package.json
          if git diff --quiet HEAD~1 HEAD package.json; then
            echo "📋 Nenhuma mudança detectada no package.json"
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "🔄 Mudanças detectadas no package.json"
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi
        else
          # Primeiro commit ou branch sem histórico
          echo "🆕 Primeiro commit ou branch sem histórico"
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        fi
        
        echo "✅ Verificação de versão concluída"
      shell: bash
        
    - name: Publicar no NPM
      if: steps.check.outputs.changed == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Criar Release no GitHub
      if: steps.check.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ steps.check.outputs.version }}';
          const tagName = `v${version}`;
          
          try {
            // Criar tag
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tagName}`,
              sha: context.sha
            });
            
            // Criar release
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: `Release v${version}`,
              body: `🚀 Nova versão do Commit Wizard: v${version}
              
              ## Instalação
              \`\`\`bash
              npm install -g commit-wizard
              \`\`\`
              
              ## Como usar
              \`\`\`bash
              commit-wizard
              \`\`\`
              
              Para mais informações, consulte o [README](https://github.com/gilbert-oliveira/commit-wizard#readme).`,
              draft: false,
              prerelease: false
            });
            
            console.log(`✅ Release v${version} criado com sucesso`);
          } catch (error) {
            console.log(`⚠️  Erro ao criar release: ${error.message}`);
            // Não falhar o workflow se não conseguir criar release
          }

    - name: Preparar artefatos
      if: steps.check.outputs.changed == 'true'
      run: |
        echo "📦 Preparando artefatos para distribuição..."
        mkdir -p release
        cp -r dist/ release/
        cp package.json README.md LICENSE release/
        
        cd release && sha256sum * > checksums.txt
        echo "✅ Artefatos preparados"
      shell: bash

    - name: Upload artefatos
      if: steps.check.outputs.changed == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: commit-wizard-release-v${{ steps.check.outputs.version }}
        path: release/
        retention-days: 90
