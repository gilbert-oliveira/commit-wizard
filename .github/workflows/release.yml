name: CI & Release

on:
  push:
    branches:
      - main
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test:ci

      - name: Build
        run: npm run build

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Check if version was updated
        id: check-version
        run: |
          PREVIOUS_VERSION=$(git log --oneline -2 | tail -1 | grep -o 'version [0-9]\+\.[0-9]\+\.[0-9]\+' | cut -d' ' -f2 || echo "none")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "previous=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "PREVIOUS_VERSION: $PREVIOUS_VERSION"
          echo "CURRENT_VERSION: $CURRENT_VERSION"

      - name: Publish to NPM
        if: steps.check-version.outputs.current != steps.check-version.outputs.previous
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip publish
        if: steps.check-version.outputs.current == steps.check-version.outputs.previous
        run: echo "No version change detected, skipping publish" 